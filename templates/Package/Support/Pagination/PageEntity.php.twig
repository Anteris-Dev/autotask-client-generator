<?php

namespace Anteris\Autotask\Support\Pagination;

use GuzzleHttp\Exception\ClientException;
use GuzzleHttp\Psr7\Request;
use GuzzleHttp\Psr7\Response;
use Spatie\DataTransferObject\DataTransferObject;

/**
 * Represents a page when paginating results from Autotask.
 */
class PageEntity extends DataTransferObject
{
    public int $count;
    public int $requestCount;
    public ?string $prevPageUrl;
    public ?string $nextPageUrl;

    /**
     * Creates a new PageEntity from a Guzzle request / response.
     * 
     * @param  Request   $request   The http request sent.
     * @param  Response  $response  The http response received.
     * 
     * @author Aidan Casey <aidan.casey@anteris.com>
     */
    public static function fromGuzzle(Request $request, Response $response): PageEntity
    {
        $array = json_decode($response->getBody(), true);

        /**
         * Here we are just making sure the pageDetails key exists.
         */
        if (array_key_exists('pageDetails', $array) === false) {
            throw new ClientException(
                'Expecting "pageDetails" key in response!',
                $request,
                $response
            );
        }

        /**
         * And here we finally return the result.
         */
        return new static($array['pageDetails']);
    }
}
