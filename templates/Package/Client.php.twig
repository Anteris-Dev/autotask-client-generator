<?php

namespace Anteris\Autotask;

{%~ for service in services|sort %}
use Anteris\Autotask\API\{{ service.plural }}\{{ service.singular }}Service;
{%~ endfor %}
use GuzzleHttp\Client as HttpClient;

class Client
{
    /** @var array Stores an instance of each class when created for faster performance. */
    protected array $classCache = [];

    /** @var HttpClient A minimal HTTP client to be passed to each service class. */
    protected HttpClient $client;

    /**
     * Creates a new HTTP client with headers to authenticate with Autotask.
     *
     * @param  Client  $client  An instance of the Guzzle Http client.
     * @author Aidan Casey <aidan.casey@anteris.com>
     */
    public function __construct(HttpClient $client)
    {
        $this->client = $client;
    }
{%~ for service in services|sort ~%}
    /**
     * Handles any interaction with the {{ service.plural }} endpoint.
     */
    public function {{ service.plural|first|lower }}{{ service.plural|slice(1) }}(): {{ service.singular }}Service
    {
        if (! isset($this->classCache['{{ service.plural }}'])) {
            $this->classCache['{{ service.plural }}'] = new {{ service.singular }}Service($this->client);
        }

        return $this->classCache['{{ service.plural }}'];
    }
{% endfor %}
}
